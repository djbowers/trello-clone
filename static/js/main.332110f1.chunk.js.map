{"version":3,"sources":["components/TrelloActionButton/TrelloActionButton.module.scss","components/App/App.module.scss","components/TrelloCard/TrelloCard.module.scss","components/TrelloList/TrelloList.module.scss","redux/actions/listsAction.js","redux/actions/cardsAction.js","redux/actions/index.js","redux/reducers/listsReducer.js","redux/reducers/index.js","redux/store/index.js","components/TrelloCard/index.js","components/TrelloCard/TrelloCard.component.jsx","components/TrelloActionButton/TrelloActionButton.component.jsx","components/TrelloActionButton/index.js","components/TrelloList/index.js","components/TrelloList/TrelloList.component.jsx","components/App/index.js","components/App/App.component.jsx","index.js"],"names":["module","exports","addList","title","type","ACTION_TYPES","ADD_LIST","payload","addCard","text","listId","ADD_CARD","DRAG_HAPPENED","initialState","id","cards","cardId","listsReducer","state","newList","newCard","map","list","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","splice","find","card","listStart","listEnd","combineReducers","lists","store","compose","applyMiddleware","createStore","rootReducer","TrelloCard","index","draggableId","String","provided","className","styles","container","ref","innerRef","draggableProps","dragHandleProps","Card","content","TrelloActionButton","formOpen","openForm","setState","closeForm","handleInputChange","e","target","value","handleAddList","dispatch","props","handleAddCard","renderAddButton","buttonText","buttonStyle","listStyle","cardStyle","onClick","cx","addButtonContainer","Icon","style","marginLeft","renderForm","placeholder","wrapList","formList","buttonTitle","buttonAction","formContent","onBlur","autoFocus","onChange","formText","formButtonContainer","Button","onMouseDown","variant","color","backgroundColor","cursor","this","React","Component","connect","TrelloList","droppableId","droppableProps","key","App","onDragEnd","destination","source","sort","app","appTitle","direction","listContainer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.332110f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listStyle\":\"TrelloActionButton_listStyle__1vFSd\",\"cardStyle\":\"TrelloActionButton_cardStyle__2uhKS\",\"addButtonContainer\":\"TrelloActionButton_addButtonContainer__H3JqI\",\"formButtonContainer\":\"TrelloActionButton_formButtonContainer__2ZnvE\",\"formText\":\"TrelloActionButton_formText__1Hjmw\",\"formList\":\"TrelloActionButton_formList__1UK4i\",\"formContent\":\"TrelloActionButton_formContent__2bETD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3BT4Y\",\"appTitle\":\"App_appTitle__2p4SP\",\"listContainer\":\"App_listContainer__cAzBp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TrelloCard_container__2AypE\",\"content\":\"TrelloCard_content__2ZMMN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TrelloList_container__x8f2v\",\"title\":\"TrelloList_title__1Me0J\"};","import { ACTION_TYPES } from '../actions'\n\nexport const addList = title => {\n  return {\n    type: ACTION_TYPES.ADD_LIST,\n    payload: title\n  }\n}\n\nexport const sort = (\n  droppableIdStart,\n  droppableIdEnd,\n  droppableIndexStart,\n  droppableIndexEnd,\n  type\n) => {\n  return {\n    type: ACTION_TYPES.DRAG_HAPPENED,\n    payload: {\n      droppableIdStart,\n      droppableIdEnd,\n      droppableIndexStart,\n      droppableIndexEnd,\n      type\n    }\n  }\n}\n","import { ACTION_TYPES } from '../actions'\n\nexport const addCard = (text, listId) => {\n  return {\n    type: ACTION_TYPES.ADD_CARD,\n    payload: { text, listId }\n  }\n}\n","export * from './listsAction'\nexport * from './cardsAction'\n\nexport const ACTION_TYPES = {\n  ADD_LIST: 'ADD_LIST',\n  ADD_CARD: 'ADD_CARD',\n  DRAG_HAPPENED: 'DRAG_HAPPENED'\n}\n","import { ACTION_TYPES } from '../actions'\n\nconst initialState = [\n  {\n    id: `LIST-${0}`,\n    title: 'List 1',\n    cards: [\n      {\n        id: `CARD-${0}`,\n        text: 'Sit elit cupidatat sunt eiusmod aliqua.'\n      },\n      {\n        id: `CARD-${1}`,\n        text:\n          'Quis id incididunt dolor esse ullamco ipsum excepteur aute enim officia ut duis magna.'\n      }\n    ]\n  },\n  {\n    id: `LIST-${1}`,\n    title: 'List 2',\n    cards: [\n      {\n        id: `CARD-${2}`,\n        text:\n          'Ullamco tempor dolore sunt dolore irure sit magna irure ea occaecat id.'\n      },\n      {\n        id: `CARD-${3}`,\n        text:\n          'Ut sit in amet pariatur in dolore eiusmod minim commodo ad dolore.'\n      },\n      {\n        id: `CARD-${4}`,\n        text:\n          'Quis exercitation est excepteur in est quis id exercitation esse.'\n      }\n    ]\n  }\n]\n\nlet listId = 2\nlet cardId = 5\n\nconst listsReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ACTION_TYPES.ADD_LIST: {\n      const newList = {\n        title: payload,\n        cards: [],\n        id: `LIST-${listId}`\n      }\n      listId += 1\n      return [...state, newList]\n    }\n\n    case ACTION_TYPES.ADD_CARD: {\n      const newCard = {\n        text: payload.text,\n        id: `CARD-${cardId}`\n      }\n      cardId += 1\n\n      return state.map(list => {\n        if (list.id === payload.listId) {\n          return {\n            ...list,\n            cards: [...list.cards, newCard]\n          }\n        } else {\n          return list\n        }\n      })\n    }\n\n    case ACTION_TYPES.DRAG_HAPPENED: {\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexStart,\n        droppableIndexEnd,\n        type\n      } = payload\n\n      // move lists around\n      if (type === 'list') {\n        const list = state.splice(droppableIndexStart, 1)\n        state.splice(droppableIndexEnd, 0, ...list)\n        return [...state]\n      }\n\n      // move card within the same list\n      if (droppableIdStart === droppableIdEnd) {\n        const list = state.find(list => list.id === droppableIdStart)\n        const card = list.cards.splice(droppableIndexStart, 1)\n        list.cards.splice(droppableIndexEnd, 0, ...card)\n      }\n\n      // move card to a different list\n      if (droppableIdStart !== droppableIdEnd) {\n        // find the list where drag happened\n        const listStart = state.find(list => list.id === droppableIdStart)\n\n        // pull out the card from this list\n        const card = listStart.cards.splice(droppableIndexStart, 1)\n\n        // find the list where drag ended\n        const listEnd = state.find(list => list.id === droppableIdEnd)\n\n        // put the card in the new list\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card)\n      }\n\n      return [...state]\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\nexport default listsReducer\n","import { combineReducers } from 'redux'\nimport listsReducer from './listsReducer'\n\nexport default combineReducers({\n  lists: listsReducer\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\n\nimport rootReducer from '../reducers'\n\nconst middlewares = []\n\nif (process.env.NODE_ENV === `development`) {\n  const { logger } = require(`redux-logger`)\n\n  middlewares.push(logger)\n}\n\nconst store = compose(applyMiddleware(...middlewares))(createStore)(rootReducer)\n\nexport default store\n","import TrelloCard from './TrelloCard.component'\n\nexport default TrelloCard\n","import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport { Draggable } from 'react-beautiful-dnd'\n\nimport styles from './TrelloCard.module.scss'\n\nconst TrelloCard = ({ text, cardId, index }) => {\n  return (\n    <Draggable draggableId={String(cardId)} index={index}>\n      {provided => (\n        <div\n          className={styles.container}\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <Card className={styles.content}>{text}</Card>\n        </div>\n      )}\n    </Draggable>\n  )\n}\n\nexport default TrelloCard\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport TextArea from 'react-textarea-autosize'\nimport Icon from '@material-ui/core/Icon'\nimport Card from '@material-ui/core/Card'\nimport Button from '@material-ui/core/Button'\nimport cx from 'classnames'\n\nimport { addList, addCard } from '../../redux/actions'\nimport styles from './TrelloActionButton.module.scss'\n\nclass TrelloActionButton extends React.Component {\n  state = {\n    formOpen: false,\n    text: ''\n  }\n\n  openForm = () => {\n    this.setState({\n      formOpen: true\n    })\n  }\n\n  closeForm = () => {\n    this.setState({\n      formOpen: false\n    })\n  }\n\n  handleInputChange = e => {\n    this.setState({\n      text: e.target.value\n    })\n  }\n\n  handleAddList = () => {\n    const { dispatch } = this.props\n    const { text } = this.state\n\n    if (text) {\n      this.setState({\n        text: ''\n      })\n      dispatch(addList(text))\n    }\n\n    return\n  }\n\n  handleAddCard = () => {\n    const { dispatch } = this.props\n    const { text } = this.state\n    const { listId } = this.props\n\n    if (text) {\n      this.setState({\n        text: ''\n      })\n      dispatch(addCard(text, listId))\n    }\n\n    return\n  }\n\n  renderAddButton = () => {\n    const { list } = this.props\n\n    const buttonText = list ? 'Add another list' : 'Add a card'\n    const buttonStyle = list ? styles.listStyle : styles.cardStyle\n\n    return (\n      <div\n        onClick={this.openForm}\n        className={cx(styles.addButtonContainer, buttonStyle)}\n      >\n        <Icon>add</Icon>\n        <p style={{ marginLeft: 8 }}>{buttonText}</p>\n      </div>\n    )\n  }\n\n  renderForm = () => {\n    const { list } = this.props\n\n    const placeholder = list\n      ? 'Enter list title...'\n      : 'Enter a title for this card...'\n\n    const wrapList = list ? styles.formList : null\n    const buttonTitle = list ? 'Add List' : 'Add Card'\n    const buttonAction = list ? this.handleAddList : this.handleAddCard\n\n    return (\n      <div className={wrapList}>\n        <Card className={styles.formContent}>\n          <TextArea\n            placeholder={placeholder}\n            onBlur={this.closeForm}\n            autoFocus\n            value={this.state.text}\n            onChange={this.handleInputChange}\n            className={styles.formText}\n          />\n        </Card>\n        <div className={styles.formButtonContainer}>\n          <Button\n            onMouseDown={buttonAction}\n            variant=\"contained\"\n            style={{ color: 'white', backgroundColor: '#5aac44' }}\n          >\n            {buttonTitle}\n          </Button>\n          <Icon style={{ marginLeft: 8, cursor: 'pointer' }}>close</Icon>\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    return this.state.formOpen ? this.renderForm() : this.renderAddButton()\n  }\n}\n\nexport default connect()(TrelloActionButton)\n","import TrelloActionButton from './TrelloActionButton.component'\n\nexport default TrelloActionButton\n","import TrelloList from './TrelloList.component'\n\nexport default TrelloList\n","import React from 'react'\nimport { Droppable, Draggable } from 'react-beautiful-dnd'\n\nimport TrelloCard from '../TrelloCard'\nimport TrelloActionButton from '../TrelloActionButton'\nimport styles from './TrelloList.module.scss'\n\nconst TrelloList = ({ title, cards, listId, index }) => {\n  return (\n    <Draggable draggableId={String(listId)} index={index}>\n      {provided => (\n        <div\n          className={styles.container}\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <Droppable droppableId={String(listId)}>\n            {provided => (\n              <div ref={provided.innerRef} {...provided.droppableProps}>\n                <div className={styles.title}>{title}</div>\n                {cards.map((card, index) => (\n                  <TrelloCard\n                    key={card.id}\n                    index={index}\n                    text={card.text}\n                    cardId={card.id}\n                  />\n                ))}\n                {provided.placeholder}\n                <TrelloActionButton listId={listId} />\n              </div>\n            )}\n          </Droppable>\n        </div>\n      )}\n    </Draggable>\n  )\n}\n\nexport default TrelloList\n","import App from './App.component'\n\nexport default App\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\n\nimport TrelloList from '../TrelloList'\nimport TrelloActionButton from '../TrelloActionButton'\nimport { sort } from '../../redux/actions'\n\nimport styles from './App.module.scss'\n\nconst App = ({ lists, dispatch }) => {\n  const onDragEnd = ({ destination, source, draggableId, type }) => {\n    if (!destination) {\n      return\n    }\n\n    dispatch(\n      sort(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        type\n      )\n    )\n  }\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className={styles.app}>\n        <div className={styles.appTitle}>Trello Clone</div>\n        <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\n          {provided => (\n            <div\n              className={styles.listContainer}\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {lists.map((list, index) => (\n                <TrelloList\n                  key={list.id}\n                  listId={list.id}\n                  title={list.title}\n                  cards={list.cards}\n                  index={index}\n                />\n              ))}\n              {provided.placeholder}\n              <TrelloActionButton list />\n            </div>\n          )}\n        </Droppable>\n      </div>\n    </DragDropContext>\n  )\n}\n\nconst mapStateToProps = ({ lists }) => ({\n  lists\n})\n\nexport default connect(mapStateToProps)(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport store from './redux/store'\n\nimport App from './components/App'\n\nimport './styles'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}